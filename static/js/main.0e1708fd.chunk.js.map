{"version":3,"sources":["pages/Login.js","pages/Signup.js","util/auth.js","components/AccountProfile.js","components/Account.js","components/Todo.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Login","history","useState","email","password","loading","user","setUser","errors","setErrors","validForSubmission","submitErrors","forEach","field","trim","_","isEmpty","handleChange","event","target","name","value","handleSubmit","a","preventDefault","userData","axios","post","then","response","localStorage","setItem","data","token","push","className","onSubmit","htmlFor","id","type","placeholder","autoComplete","onChange","to","Signup","props","firstName","lastName","username","confirmPassword","newUser","setNewUser","newUserData","authMiddleWare","getItem","withStyles","theme","root","content","flexGrow","justifyContent","margin","toolBar","mixins","toolbar","uiProgress","color","position","zIndex","height","width","left","top","chooseFile","spacing","uploadButton","customError","fontSize","marginTop","submitButton","backgroundColor","details","display","updateField","avatar","flexShrink","marginBottom","nameText","paddingLeft","accountInfo","progress","classes","uiLoading","buttonLoading","imageError","userInfo","setUserInfo","profilePicture","setProfilePicture","useEffect","authToken","defaults","headers","common","Authorization","get","console","log","userCredentials","imageUrl","catch","error","errorMsg","updateFormValues","formRequest","status","profilePictureHandler","form_data","FormData","append","image","window","location","reload","CircularProgress","size","Avatar","src","Typography","gutterBottom","variant","files","Button","startIcon","onClick","Divider","Grid","container","item","md","xs","TextField","fullWidth","label","inputProps","defaultValue","disabled","flexWrap","overflow","paper","padding","textAlign","flexDirection","paddingTop","paddingBottom","fixedHeightPaper","clsx","fixedHeight","Container","Paper","title","marginLeft","flex","appBar","right","floatingButton","bottom","form","minWidth","bullet","transform","pos","uiProgess","dialogStyle","maxWidth","viewRoot","closeButton","palette","grey","children","onClose","todos","body","todoId","todoInfo","setTodoInfo","getCurrentTodos","setCurrentTodos","buttonType","setButtonType","open","setOpen","viewOpen","setViewOpen","setUiLoading","err","handleClose","handleViewClose","dayjs","extend","relativeTime","IconButton","aria-label","style","Dialog","fullScreen","keepMounted","aria-labelledby","AppBar","Toolbar","edge","autoFocus","userTodo","options","url","method","DialogContent","required","helperText","multiline","rows","rowsMax","map","todo","sm","Card","CardContent","key","component","createdAt","fromNow","substring","CardActions","delete","deleteTodoHandler","paperFullWidth","DialogTitle","readOnly","InputProps","disableUnderline","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","toolBarIcon","alignItems","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","directoryText","imageLoading","authUser","setAuthUser","render","loadPage","setLoadPage","_isMounted","useRef","current","CssBaseline","noWrap","Drawer","List","ListItem","button","ListItemIcon","removeItem","App","exact","path","Home","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0e1708fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport axios from 'axios';\n\nconst Login = ({history}) => {\n\n\tconst [user, setUser] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t\tloading: false\n\t})\n\tconst [errors, setErrors] = useState({})\n\n\tconst validForSubmission = () => {\n\t\tlet submitErrors = {}\n\t\tconst requiredFields = ['password', 'email']\n\t\trequiredFields.forEach(field => {\n\t\t\tif(user[field].trim() === ''){\n\t\t\t\tsubmitErrors = {\n\t\t\t\t\t...submitErrors,\n\t\t\t\t\t[field]: `Must enter a valid ${field}`\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tsetErrors(submitErrors)\n\t\treturn _.isEmpty(submitErrors)\n\t}\n\n\tconst handleChange = (event) => {\n\t\tsetUser({\n\t\t\t...user, [event.target.name]: event.target.value\n\t\t})\n\t}\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault()\n\t\tif (validForSubmission()){\n\t\t\tsetUser({\n\t\t\t\tloading: true\n\t\t\t})\n\t\t\tconst userData = {\n\t\t\t\temail: user.email,\n\t\t\t\tpassword: user.password\n\t\t\t}\n\t\ttry {\n\t\t\tawait axios.post('/login', userData).then((response) => {\n\t\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`)\n\t\t\t\tsetUser({\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t\thistory.push('/')\n\t\t\t})\n\t\t} catch(error) {\n\t\t\t\tsetUser({\n\t\t\t\t\terrors: error.response.data,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst { email, password } = errors\n\n\treturn (\n\t\t<>\n\t\t<section className='absolute w-full h-full'>\n\t\t\t<div className='container mx-auto px-4 h-full'>\n\t\t\t\t<div className='flex content-center items-center justify-center h-full'>\n\t\t\t\t\t<div className=\"w-full lg:w-4/12 px-4\">\n\t\t\t\t\t\t<div className='relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blue-400 border-0'>\n\t\t\t\t\t\t\t<form className=\"px-8 pt-6 pb-8 mb-4\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<p className='text-center text-3xl text-gray-100 leading-8 sm:text-4xl sm:leading-10 font-extrabold mb-10'>Login</p>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t<label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"email\">\n\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n\t\t\t\t\t\t\t\t\tid=\"email\" \n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className='text-red-800'>{email}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-6\">\n\t\t\t\t\t\t\t\t<label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n\t\t\t\t\t\t\t\t\tid=\"password\" \n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className='text-red-800'>{password}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-between\">\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tclassName=\"w-full mb-4 bg-gray-900 active:bg-gray-100 text-white font-bold py-2 px-4 rounded shadow hover:shadow-lg focus:outline-none focus:shadow-outline\" \n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<Link className=\"inline-block align-baseline mx-auto font-bold text-sm text-gray-100 hover:text-gray-900\" to='/signup'>\n\t\t\t\t\t\t\t\t\tDon't have an account? Sign Up!\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport axios from 'axios'\n\nconst Signup = (props) => {\n\n    const [newUser, setNewUser] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        loading: false\n    })\n\n    const [errors, setErrors] = useState({})\n\n\tconst validForSubmission = () => {\n\t\tlet submitErrors = {}\n\t\tconst requiredFields = [\"firstName\", \"lastName\", \"username\", \"email\", \"password\", \"confirmPassword\"]\n\t\trequiredFields.forEach(field => {\n\t\t\tif(newUser[field].trim() === ''){\n\t\t\t\tsubmitErrors = {\n\t\t\t\t\t...submitErrors,\n\t\t\t\t\t[field]: `Field cannot be empty`\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tsetErrors(submitErrors)\n\t\treturn _.isEmpty(submitErrors)\n\t}\n\n    const handleChange = (event) => {\n        setNewUser({\n            ...newUser, [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        if(validForSubmission()) {\n            setNewUser({ loading: true })\n            const newUserData = {\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                username: newUser.username,\n                email: newUser.email,\n                password: newUser.password,\n                confirmPassword: newUser.confirmPassword\n            }\n        try{\n            await axios.post('/signup', newUserData).then((response) => {\n                localStorage.setItem('AuthToken', `Bearer ${response.data.token}`)\n                setNewUser({\n                    loading: false\n                })\n                props.history.push('/')\n            })\n        } catch(error){\n                setNewUser({\n                    errors: error.response.data,\n                    loading: false\n                })\n            }\n        }\n    }   \n\n    return (\n        <section className='absolute w-full h-full mt-10'>\n            <div className='container mx-auto px-4 h-full'>\n                <div className='flex content-center items-center justify-center h-full'>\n                    <div className='w-full lg:w-6/12 px-4'>\n                        <div className='relative flex flex-wrap min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blue-400 border-0'>\n                            <form className=\"w-full max-w-lg px-8 pt-8 pb-8 mx-auto mb:4\" onSubmit={handleSubmit}>\n                                <p className='text-center text-3xl text-gray-100 leading-8 sm:text-4xl sm:leading-10 font-extrabold mb-10'>Sign Up</p>\n                                <div className=\"flex flex-wrap -mx-3\">\n                                    <div className=\"w-full md:w-1/2 px-3 mb-2\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-first-name\">\n                                            First Name\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"firstName\"\n                                            name='firstName'\n                                            type=\"firstName\" \n                                            placeholder=\"First Name\"\n                                            onChange={handleChange}\n                                        />\n                                        <p className='text-red-800 mt-1'>{errors.firstName}</p>\n                                    </div>\n                                    <div className=\"w-full md:w-1/2 px-3\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-last-name\">\n                                            Last Name\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"lastName\"\n                                            name='lastName' \n                                            type=\"text\" \n                                            placeholder=\"Last Name\"\n                                            onChange={handleChange}\n                                            />\n                                        <p className='text-red-800 mt-1'>{errors.lastName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-wrap -mx-3 mb-6\">\n                                    <div className=\"w-full px-3 mb-2\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-username\">\n                                            Username\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" \n                                            name='username'\n                                            type=\"username\" \n                                            placeholder=\"Username\"\n                                            onChange={handleChange}\n                                        />\n                                        <p className='text-red-800 mt-1'>{errors.username}</p>\n                                    </div>\n                                    <div className=\"w-full px-3 mb-2\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-email\">\n                                            Email Address\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                                            id=\"email\" \n                                            name='email'\n                                            type=\"email\" \n                                            placeholder=\"Email Address\"\n                                            onChange={handleChange}\n                                        />\n                                        <p className='text-red-800 mt-1'>{errors.email}</p>\n                                    </div> \n                                    <div className=\"w-full px-3 mb-2\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-password\">\n                                        Password\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" \n                                            name=\"password\"\n                                            type=\"password\" \n                                            placeholder=\"Password\"\n                                            onChange={handleChange}\n                                        />\n                                        <p className='text-red-800 mt-1'>{errors.password}</p>\n                                    </div>\n                                    <div className=\"w-full px-3 mb-2\">\n                                        <label className=\"block text-gray-100 text-sm font-bold mb-2\" htmlFor=\"grid-password\">\n                                        Confirm Password\n                                        </label>\n                                        <input \n                                            className=\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"confirmPassword\" \n                                            name='confirmPassword'\n                                            type=\"password\" \n                                            placeholder=\"Confirm Password\"\n                                            onChange={handleChange}\n                                        />\n                                        <p className='text-red-800 mt-1'>{errors.confirmPassword}</p>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-wrap items-center justify-between\">\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tclassName=\"w-full mb-4 bg-gray-900 active:bg-gray-100 text-white font-bold py-2 px-4 rounded shadow hover:shadow-lg focus:outline-none focus:shadow-outline\" \n                                    type=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<Link className=\"inline-block align-baseline mx-auto font-bold text-sm text-gray-100 hover:text-gray-900\" to='/login'>\n\t\t\t\t\t\t\t\t\tAlready have an account? Login\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Signup","export const authMiddleWare = (history) => {\n    const authToken = localStorage.getItem('AuthToken')\n    if(authToken === null){\n        history.push('/login')\n    }\n}","import React, { useState, useEffect } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { Avatar, CircularProgress, Divider, Button, Grid, TextField, Typography } from '@material-ui/core'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport axios from 'axios'\nimport { authMiddleWare } from '../util/auth'\n\nconst AccountProfile = ({ history, classes }) => {\n    \n    const [userInfo, setUserInfo] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        username: '',\n        uiLoading: true,\n        buttonLoading: false,\n        errors: '',\n        imageError: ''\n    })\n\n    const [profilePicture, setProfilePicture] = useState({\n        avatar: '',\n    })\n\n    useEffect(() => {\n        authMiddleWare(history)\n        const authToken = localStorage.getItem('AuthToken')\n        axios.defaults.headers.common = { Authorization: `${authToken}`}\n        axios.get('/user').then((response) => {\n            console.log(response.data)\n            setUserInfo({\n                firstName: response.data.userCredentials.firstName,\n                lastName: response.data.userCredentials.lastName,\n                email: response.data.userCredentials.email,\n                username: response.data.userCredentials.username,\n                uiLoading: false\n            })\n            setProfilePicture({\n                avatar: response.data.userCredentials.imageUrl\n            })\n        })\n        .catch((error) => {\n            console.log(error)\n            setUserInfo({\n                errorMsg: 'Error in retrieving the data'\n            })\n        })\n    },[history])\n\n    const handleChange = (event) => {\n        setUserInfo({\n            ...userInfo, [event.target.name]: event.target.value\n        })\n    }\n\n    const updateFormValues = async (event) => {\n        event.preventDefault()\n        setUserInfo({ buttonLoading: true})\n        authMiddleWare(history) \n        const authToken = localStorage.getItem('AuthToken')\n        axios.defaults.headers.common = { Authorization: `${authToken}` }\n        const formRequest = {\n            firstName: userInfo.firstName,\n            lastName: userInfo.lastName,\n        }\n        try {\n            await axios.post('/user', formRequest).then(() => {\n                setUserInfo({\n                    firstName: userInfo.firstName,\n                    lastName: userInfo.lastName,\n                    username: userInfo.username\n                })\n            \n            })\n        } catch(error) {\n            if (error.response.status === 404) {\n                history.push('/login')\n            }\n        }\n    }\n\n    const handleImageChange = (event) => {\n        setProfilePicture({\n            image: event.target.files[0],\n        })\n    }\n\n    const profilePictureHandler = async (event) => {\n        event.preventDefault()\n        setUserInfo({\n            uiLoading: true\n        })\n        authMiddleWare(history)\n        const authToken = localStorage.getItem('AuthToken')\n        let form_data = new FormData()\n            form_data.append('image', profilePicture.image)\n            form_data.append('content', userInfo.content)\n            axios.defaults.headers.common = { Authorization: `${authToken}`}\n\n        try {\n            await axios.post('/user/image', form_data, {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            })\n            .then(() => {\n                window.location.reload()\n            })\n        } catch(error) {\n            if (error.response.status === 403) {\n                history.push('/login')\n            }\n            console.log(error)\n            setUserInfo({\n                firstName: userInfo.firstName,\n                lastName: userInfo.lastName,\n                username: userInfo.username,\n                email: userInfo.email,\n                uiLoading: false,\n                imageError: 'Error in posting the data'\n            })\n        }\n    }\n    const { firstName, lastName, username } = userInfo\n\n    const { avatar } = profilePicture\n    if (userInfo.uiLoading === true) {\n        return (\n            <div className={classes.content}>\n                <div className={classes.toolbar}/>\n                {userInfo.uiLoading && <CircularProgress size={150} className={classes.uiProgress}/>}\n            </div>\n        )\n    } else {\n    \n    return (\n        <>\n        <div className={classes.details}>\n            <div>\n                <Avatar src={avatar} className={classes.avatar} />\n                <Typography\n                    className={classes.nameText}\n                    gutterBottom variant='h4'\n                >\n                    <p className='font-sans text-2xl sm:text-3xl tracking-wider'>{firstName} {lastName} / {username}</p>\n                </Typography>\n                <input className={classes.chooseFile} type='file' onChange={handleImageChange}/>\n                <Button \n                    className={classes.uploadButton}\n                    color='default'\n                    variant='contained'\n                    type='submit'\n                    startIcon={<CloudUploadIcon/>}\n                    size='small'\n                    onClick={profilePictureHandler}\n                >\n                    Upload Photo\n                </Button>\n                \n                {userInfo.imageError ? (\n                    <div className={classes.customError}>\n                        {' '}\n                        {`Wrong Image Format` && `Supported Format are PNG and JPG`}\n                    </div>\n                ) : (\n                    false\n                )}\n            </div>\n        </div>\n        <div className={classes.progress} />\n                <Divider/>\n            <br/>\n            <form autoComplete='off'>\n                <Grid container spacing={3} >\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            label='Update First Name'\n                            margin='dense'\n                            name='firstName'\n                            variant='outlined'\n                            inputProps={{className: classes.updateField}}\n                            defaultValue={userInfo.firstName}\n                            onChange={handleChange}\n                        >\n                        </TextField>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            label='Update Last Name'\n                            margin='dense'\n                            name='lastName'\n                            variant='outlined'\n                            inputProps={{className: classes.updateField}}\n                            defaultValue={userInfo.lastName}\n                            onChange={handleChange}\n                        >\n                        </TextField>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            disabled\n                            fullWidth\n                            label='Email'\n                            margin='dense'\n                            name='email'\n                            variant='outlined'\n                            defaultValue={userInfo.email}\n                            onChange={handleChange}\n                        >\n                        </TextField>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            disabled\n                            fullWidth\n                            label='Username'\n                            margin='dense'\n                            name='username'\n                            variant='outlined'\n                            defaultValue={userInfo.username}\n                            onChange={handleChange}\n                        >\n                        </TextField>\n                    </Grid>\n                </Grid>\n            </form>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    type='submit'\n                    className={classes.submitButton}\n                    onClick={updateFormValues}\n                    disabled={\n                        userInfo.buttonLoading ||\n                        !userInfo.firstName ||\n                        !userInfo.lastName \n                    }\n                    >\n                    Save Details\n                    {userInfo.buttonLoading && <CircularProgress size={30} className={classes.progress}/>}\n                </Button>\n        </>\n    )\n    }\n}\n\nconst styles = (theme) => ({\n    root: {},\n    content: {\n        flexGrow: 1,\n        justifyContent: 'center',\n        margin: 'auto',\n    },\n    toolBar: theme.mixins.toolbar,\n    uiProgress: {\n        color: '#63B3ED',\n        position: 'fixed',\n        zIndex: '1000',\n        height: '31px',\n        width: '31px',\n        left: '50%',\n        top: '35%'\n    },\n    chooseFile: {\n        margin: theme.spacing(2),\n        color: '#4A5568'\n    },\n    uploadButton: {\n        margin: theme.spacing(1),\n        color: '#4A5568'\n    },\n    customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    submitButton: {\n        marginTop: '10px',\n        backgroundColor: '#63B3ED'\n    },\n    details: {\n        display: 'flex',\n        color: '#4A5568',\n        margin: 'auto',\n        justifyContent: 'center'\n    },\n    updateField: {\n        color: '#4A5568',\n    },\n    avatar: {\n\t\theight: 110,\n\t\twidth: 100,\n\t\tflexShrink: 0,\n        flexGrow: 0,\n        marginTop: 20,\n        marginBottom: 20,\n        margin: 'auto'\n    },\n    nameText: {\n        paddingLeft: '15px',    \n    },\n    accountInfo: {\n        color: '#4A5568',\n    },\n    progress: {\n        marginTop: theme.spacing(2)\n    },\n})\n\nexport default withStyles(styles)(AccountProfile)","import React from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport  AccountProfile  from './AccountProfile'\nimport { Container, Grid, Paper } from '@material-ui/core';\nimport clsx from 'clsx'\n\nconst Account = ({ classes }) => {\n\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.toolbar} />\n            <Container className={classes.container}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <AccountProfile />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\nconst styles = (theme) => ({\n    content: {\n        flexGrow: 1,\n        margin: 'auto',\n        flexWrap: 'wrap',\n        height: '100vh',\n        overflow: 'auto',\n    },\n    paper: {\n        padding:theme.spacing(2),\n        textAlign: 'center',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    toolBar: theme.mixins.toolbar,\n})\n\nexport default withStyles(styles)(Account)","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { AppBar, Button, Card, CardActions, CardContent, CircularProgress, Container, Dialog, DialogContent, DialogTitle, DialogContentText, Grid, IconButton, TextField, Toolbar, Typography, DialogActions } from '@material-ui/core'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { authMiddleWare } from '../util/auth'\n\nconst Todo = ({ classes, history, children, onClose }) => {\n    const [todoInfo, setTodoInfo] = useState({\n        todos: '',\n        title: '',\n        body: '',\n        todoId: '',\n    })\n\n    const [getCurrentTodos, setCurrentTodos] = useState({\n        todos: []\n    })\n    \n    const [buttonType, setButtonType] = useState('')\n    const [open, setOpen] = useState(false)\n    const [viewOpen, setViewOpen] = useState(false)\n    const [uiLoading, setUiLoading] = useState(true)\n    const [errors, setErrors] = useState([])\n\n    // handleChange to keep track of the form input changes\n    const handleChange = (event) => {\n        setTodoInfo({\n            ...todoInfo, [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        authMiddleWare(history)\n        const authToken = localStorage.getItem('AuthToken')\n        axios.defaults.headers.common = { Authorization: `${authToken}` }\n\n        axios.get('/todos').then((response) =>{\n            setCurrentTodos({\n                todos: response.data\n            })\n            setUiLoading({\n                uiLoading: false\n            })      \n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    },[history])\n\n    //handleClickOpen for the button to open dialog modal to add todo\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    //handleClose to close the dialog modal\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        authMiddleWare(history)\n        const userTodo = {\n            title: todoInfo.title,\n            body: todoInfo.body\n        }\n        let options = {}\n        if(buttonType === 'Edit') {\n            options = {\n                url: `/todo/${todoInfo.todoId}`,\n                method: 'put',\n                data: userTodo\n            }\n        } \n        if (buttonType === 'Add') {\n            options = {\n                url: '/todo',\n                method: 'post',\n                data: userTodo\n            }\n        } else {\n            options = {\n                url: '/todo',\n                method: 'post',\n                data: userTodo\n            }\n        }\n        const authToken = localStorage.getItem('AuthToken')\n        console.log(authToken)\n        axios.defaults.headers.common = { Authorization: `${authToken}`}\n        axios(options).then(() => {\n            setOpen(false)\n            window.location.reload()\n        })\n        .catch((error) => {\n            setOpen({ open: true, errors: error.response.data })\n            console.log(error)\n        })\n\n    }\n\n    const handleViewOpen = (data) => {\n        setTodoInfo({\n            title: data.todo.title,\n            body: data.todo.body\n        })\n        setViewOpen(true)\n    }\n\n    const handleViewClose = () => {\n        setViewOpen(false)\n    }\n\n    const handleEditOpen = (data) => {\n        console.log(data)\n        setTodoInfo({\n            title: data.todo.title,\n            body: data.todo.body,\n            todoId: data.todo.todoId,\n        })\n        setButtonType('Edit')\n        setOpen(true)\n    }\n    \n    const deleteTodoHandler = (data) => {\n        authMiddleWare(history)\n        const authToken = localStorage.getItem('AuthToken')\n        axios.defaults.headers.common ={ Authorization: `${authToken}`}\n        let todoId = data.todo.todoId\n        \n        axios.delete(`todo/${todoId}`).then(() => {\n            window.location.reload()\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    // const DialogTitle = withStyles(styles)((props) => {\n    //     const { ...other } = props\n    //     return (\n    //         <MuiDialogTitle disableTypography className={classes.root} {...other}>\n    //              <Typography varian='h6'>{children}</Typography>\n    //              {\n    //                  onClose ? (\n    //                     <IconButton aria-label='close' className={classes.closeButton} onClock={onClose}>\n    //                         <CloseIcon/>\n    //                     </IconButton>\n    //                 ) : null\n    //              }\n    //         </MuiDialogTitle>\n    //     )\n    // })\n\n    // const DialogContent = withStyles((theme) => ({\n    //     viewRoot: {\n    //         padding: theme.spacing(2)\n    //     }\n    // }))(MuiDialogContent)\n\n    dayjs.extend(relativeTime)\n\n    return (\n        <main className={classes.content}>\n            <IconButton className={classes.floatingButton} aria-label='Add Todo' color='primary' onClick={handleClickOpen}>\n                <AddCircleIcon style={{ fontSize: 60 }} />\n            </IconButton>\n            <Dialog\n                fullScreen\n                open={open}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby='form-dialog-title'\n            >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge='start' color='inherit' onClick={handleClose} aria-label='close'>\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant='h6' className={classes.title}>\n                            { buttonType === 'Edit' ? 'Edit Todo' : 'Create New Todo' }\n                        </Typography>\n                        <Button\n                            autoFocus\n                            color='inherit'\n                            onClick={handleSubmit}\n                            className={classes.submitButton}\n                        >\n                            { buttonType === 'Edit' ? 'Save' : 'Submit'}\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent style={{marginTop: '100px'}}>\n                <form className={classes.form}>\n                    <TextField\n                        variant='outlined'\n                        required\n                        fullWidth\n                        autoFocus\n                        margin='dense'\n                        id='todoTitle'\n                        label='Add a title...'\n                        name='title'\n                        autoComplete='todoTitle'\n                        helperText='* Required Field'\n                        onChange={handleChange}\n                        value={todoInfo.title}\n                    />\n                    <TextField\n                        variant='outlined'\n                        required\n                        fullWidth\n                        autoFocus\n                        margin='dense'\n                        id='todoBody'\n                        label='What do you want to get done?'\n                        name='body'\n                        autoComplete='todoBody' \n                        helperText='* Required Field'\n                        multiline\n                        rows={10}\n                        rowsMax={10} \n                        onChange={handleChange}\n                        value={todoInfo.body}\n                    />\n                </form>\n                </DialogContent>\n            </Dialog>\n            <div>\n            <Container maxWidth='lg' className={classes.container}>\n            <Grid container spacing={2}>\n                {\n                   getCurrentTodos.todos.map((todo) => (\n                       <Grid item xs={12} sm={6}>\n                           <Card className={classes.root} variant='outlined'>\n                               <CardContent>\n                                    <Typography key={todo.todoId} variant='h5' component='h2'>\n                                        {todo.title}\n                                    </Typography>\n                                    <Typography className={classes.pos} color='textSecondary'>\n                                    {dayjs(todo.createdAt).fromNow()}\n                                    </Typography>\n                                    <Typography variant='body2' component='p'>\n                                        {`${todo.body.substring(0, 65)}`}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size='small' color='primary' onClick={() => handleViewOpen({ todo })} >\n                                        {' '}\n                                        View{' '}\n                                    </Button>\n                                    <Button size='small' color='primary' onClick={() => handleEditOpen({ todo })}>\n                                        {' '}\n                                        Edit{' '}\n                                    </Button>\n                                    <Button size='small' color='primary' onClick={() => deleteTodoHandler({ todo })}>\n                                        {' '}\n                                        Delete{' '}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                         <Dialog\n                            onClose={handleViewClose}\n                            aria-labelledby='customized-dialog-title'\n                            open={viewOpen}\n                            fullWidth\n                            classes={{ paperFullWidth: classes.dialogStyle }}\n                        >\n                            <DialogTitle id='customized-dialog-title' onClose={handleViewClose}>\n                                {todoInfo.title}\n                            </DialogTitle>\n                            <DialogContent>\n                                <TextField\n                                    fullWidth\n                                    id='todoDetails'\n                                    name='body'\n                                    multiline\n                                    readOnly\n                                    rows={1}\n                                    rowsMax={10}\n                                    value={todoInfo.body}\n                                    InputProps={{\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </Container>\n            </div>\n        </main>\n    )\n}\n\nconst styles = (theme) => ({\n    content: {\n        flexGrow: 1,\n        overflow: 'auto',\n        height: '100vh',\n        margin: 'auto',\n        padding: theme.spacing(3)\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    title: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tflex: 1\n    },\n    appBar: {\n        backgroundColor: '#63B3ED',\n    },\n\tsubmitButton: {\n\t\tdisplay: 'block',\n\t\tcolor: 'white',\n\t\ttextAlign: 'center',\n\t\tposition: 'absolute',\n\t\ttop: 14,\n\t\tright: 10\n\t},\n\tfloatingButton: {\n\t\tposition: 'fixed',\n\t\tbottom: 0,\n        right: 0,\n        color: '#63B3ED'\n\t},\n\tform: {\n\t\twidth: '100%',\n        margin: 'auto',\n    },\n    toolbar: theme.mixins.toolbar,\n\troot: {\n        minWidth: 470,\n    },    \n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t\ttransform: 'scale(0.8)'\n\t},\n\tpos: {\n\t\tmarginBottom: 12\n\t},\n\tuiProgess: {\n        backgroundColor: '#63B3ED',\n\t\tposition: 'fixed',\n\t\tzIndex: '1000',\n\t\theight: '31px',\n\t\twidth: '31px',\n\t\tleft: '50%',\n\t\ttop: '35%'\n\t},\n\tdialogStyle: {\n\t\tmaxWidth: '50%'\n\t},\n\tviewRoot: {\n\t\tmargin: 0,\n\t\tpadding: theme.spacing(2)\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500]\n\t}\n})\n\nexport default withStyles(styles)(Todo)","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { authMiddleWare } from '../util/auth'\nimport Account from '../components/Account';\nimport Todo from '../components/Todo';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, Divider, ListItem, ListItemIcon, CircularProgress } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport clsx from 'clsx'\n\nconst Home = ({history, classes}) => {\n\n    const [authUser, setAuthUser] = useState({\n        firstName: '',\n        lastName: '',\n        profilePicture: '',\n        uiLoading: true,\n        imageLoading: false\n    })\n\n    const [open, setOpen] = useState(true)\n\n    const [loadPage, setLoadPage] = useState({\n        render: false\n    })\n\n    const handleDrawerOpen = () => {\n        setOpen(true)\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false)\n    }\n    \n    const loadAccountPage = () => {\n        setLoadPage({\n            render: true\n        })\n    }\n\n    const loadTodoPage = () => {\n        setLoadPage({\n            render: false\n        })\n    }\n\n    const logoutHandler = () => {\n        localStorage.removeItem('AuthToken')\n        history.push('/login')\n    }\n\n    const _isMounted = useRef(true)\n    useEffect(() => {\n        authMiddleWare(history)\n        const authToken = localStorage.getItem('AuthToken')\n        axios.defaults.headers.common = { Authorization: `${authToken}`}\n        axios.get('/user').then((response) => {\n            console.log(response.data)\n            setAuthUser({\n                firstName: response.data.userCredentials.firstName,\n                lastName: response.data.userCredentials.lastName,\n                email: response.data.userCredentials.email,\n                username: response.data.userCredentials.username,\n                profilePicture: response.data.userCredentials.imageUrl\n            })\n        })\n        .catch((error) => {\n            if(error.response.status === 400) {\n                history.push('/login')\n            }\n            console.log(error)\n            setAuthUser({ errorMsg: 'Error in getting the data' })\n        })\n\n        return () => _isMounted.current = false\n    }, [history])\n\n    const { uiLoading } = authUser\n\n\tif (uiLoading === true) {\n        return (\n            <div className={classes.root}>\n                {uiLoading && <CircularProgress size={150} className={classes.uiProgress} />}\n            </div>\n        );\n\t} else {\n    return(\n        <div className={classes.root}>\n\t\t\t<CssBaseline />\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open  && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge='start'\n                            color='inherit'\n                            aria-label='open drawer'\n                            onClick={handleDrawerOpen}\n                            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography className={classes.title} variant=\"h5\" noWrap>\n                            <p className='font-sans tracking-widest'>Todo Tracker </p>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclassName={classes.drawer}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n                        }}\n                        open={open}\n\t\t\t\t\t>\n                        <div className={classes.toolBarIcon}>\n                            <IconButton onClick={handleDrawerClose}>\n                                <ChevronLeftIcon />\n                            </IconButton>\n                        </div>\n                        <Divider />\n\t\t\t\t\t\t<List className={classes.directoryText}>\n\t\t\t\t\t\t\t<ListItem button key=\"Todo\" onClick={loadTodoPage}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n                                <p className='font-sans text-xl sm:text-2xl'>Todo </p>\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem button key=\"Account\" onClick={loadAccountPage}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<AccountBoxIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n                                <p className='font-sans text-xl sm:text-2xl '>Account </p>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem button key=\"Logout\" onClick={logoutHandler}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<ExitToAppIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n                                <p className='font-sans text-xl sm:text-2xl'>Logout </p>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Drawer>\n\t\t\t<div className={classes.content}>\n                <div className={classes.toolbar}/>\n                    {loadPage.render ? <Account /> : <Todo /> }\n            </div>\n\t\t</div>\n    )\n    }\n}\nconst drawerWidth = 190\n\nconst styles = (theme) => ({\n\troot: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        height: '100vh',\n        padding: theme.spacing(3),\n        overflow: 'auto',\n    },\n\tappBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: '#63B3ED',\n        transition: theme.transitions.create(['width', 'margin'],{\n           easing: theme.transitions.easing.sharp,\n           duration: theme.transitions.duration.leavingScreen, \n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'],{\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen, \n         }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    toolBarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    title: {\n        flexGrow: 1,\n    },\n\tdrawer: {\n\t\twidth: drawerWidth,\n        flexShrink: 0,\n        color: '#4A5568'\n\t},\n\tdrawerPaper: {\n        width: drawerWidth,\n        position: 'relative',\n        backgroundColor: '#f5f5f5',\n        whiteSpace: 'nowrap',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        })\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9)\n        },\n    },\n    nameText: {\n        color: '#4A5568'\n    },\n    directoryText: {\n        color: '#4A5568'\n    },\n\tuiProgress: {\n        color: '#63B3ED',\n\t\tposition: 'fixed',\n\t\tzIndex: '1000',\n\t\theight: '31px',\n\t\twidth: '31px',\n\t\tleft: '50%',\n\t\ttop: '35%'\n\t},\n\ttoolbar: theme.mixins.toolbar\n});\n\nexport default withStyles(styles)(Home)","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport Home from './pages/Home'\nimport './styles/app.css'\n\nconst App = (props) => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/login' component={Login}/>\n        <Route exact path = '/signup' component={Signup}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n\n"],"sourceRoot":""}